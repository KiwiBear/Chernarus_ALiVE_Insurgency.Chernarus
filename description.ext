showSquadRadar = 1;

class Params
{
	class OpforPlayerConstraint
	{
		title = "Opfor Player Slots"; // Param name visible in the list
		values[] = {0,3,5,7,9}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"No Restrictions","3 BLUFOR to 1 OPFOR", "5 BLUFOR to 1 OPFOR", "7 BLUFOR to 1 OPFOR", "9 BLUFOR to 1 OPFOR"}; // Description of each selectable item
		default = 0; // Default value; must be listed in 'values' array, otherwise 0 is used
               // Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class Daytime
	{
		title = "Time of Mission Start";
		texts[] = {"Morning","Day","Evening","Night"};
		values[] = {6,12,18,0};
		default = 12;
		function = "BIS_fnc_paramDaytime"; // (Optional) Function called when player joins, selected value is passed as an argument
 		isGlobal = 1; // (Optional) 1 to execute script / function locally for every player who joins, 0 to do it only on server
	};
	class AmmoCacheCount
	{
		title = "Ammo Cache Count";
		texts[] = {"3","4","5","6","7"};
		values[] = {3,4,5,6,7};
		default = 5;
	};
	class Debug
	{
		title = "Debug Mode";
		texts[] = {"No","Yes"};
		values[] = {0,1};
		default = 0;
	};
};

class CfgDebriefing
{
  class tooManyOpfor
  {
    title = "Mission Failed!";
    subtitle = "There are too many OPFOR soldiers!";
  };
	class WestWin
	{
		title = "Mission accomplished";
		subtitle = "You successfully destoryed all ammo caches.";
		description = "You successfully destoryed all ammo caches.";
	};
	class EastLoose
	{
		title = "Mission failed";
		subtitle = "You failed to stop the western scum from destorying our ammo caches!";
		description = "You failed to stop the western scum from destorying our ammo caches!";
	};
};

class CfgFunctions
{
	class mongoose
	{
		tag = "mongoose";
		class functions
		{
			file = "functions";
			class prepareDrone{};
			class deleteMarker{};
		};
	};

	class server
	{
		tag = "server";
		file = "functions\server";
		class Sfuncs
		{
			class createObjective{};
			class adjustLogisticsPool{};
			class requestDrone{};
			class getLogisticsPool{};
			class uavCacheFinder{};
			class CheckEndMission{};
			class destroyCache{};
		};
	};

};

class CfgRemoteExec
{
	class Functions
    {
		// State of remoteExec: 0-turned off, 1-turned on, taking whitelist into account, 2-turned on, however, ignoring whitelists (default because of backward compatibility)
		mode = 2;
		// Ability to send jip messages: 0-disabled, 1-enabled (default)
		jip = 0;

		class server_fnc_adjustLogisticsPool{allowedTargets=0;};
		class server_fnc_requestDrone{allowedTargets=0;};
		class server_fnc_getLogisticsPool{allowedTargets=0;};
		class server_fnc_uavCacheFinder{allowedTargets=0;};
		class server_fnc_CheckEndMission{allowedTargets=0;};
		class server_fnc_destroyCache{allowedTargers=0;};
		

    };

};

class CfgNotifications
{
	class CacheDestroyed
	{
		title = "Cache Destroyed";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";
		description = "%1";
		duration = 7;
		priority = 5;
	};
};
